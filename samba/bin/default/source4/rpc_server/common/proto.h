#ifndef __DEFAULT_SOURCE4_RPC_SERVER_COMMON_PROTO_H__
#define __DEFAULT_SOURCE4_RPC_SERVER_COMMON_PROTO_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)
/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

/* this file contains prototypes for functions that are private 
 * to this subsystem or library. These functions should not be 
 * used outside this particular subsystem! */


/* The following definitions come from ../source4/rpc_server/common/forward.c  */


/**
 * Forward a RPC call using IRPC to another task
 */
void dcesrv_irpc_forward_rpc_call(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx,
				  void *r, uint32_t callid,
				  const struct ndr_interface_table *ndr_table,
				  const char *dest_task, const char *opname,
				  uint32_t timeout);

/* The following definitions come from ../source4/rpc_server/common/reply.c  */

void dcesrv_init_hdr(struct ncacn_packet *pkt, bool bigendian);
NTSTATUS dcesrv_fault(struct dcesrv_call_state *call, uint32_t fault_code);
NTSTATUS dcesrv_generic_session_key(struct dcesrv_connection *c,
				    DATA_BLOB *session_key);

/* The following definitions come from ../source4/rpc_server/dcesrv_auth.c  */

bool dcesrv_auth_bind(struct dcesrv_call_state *call);
NTSTATUS dcesrv_auth_bind_ack(struct dcesrv_call_state *call, struct ncacn_packet *pkt);
bool dcesrv_auth_auth3(struct dcesrv_call_state *call);
bool dcesrv_auth_alter(struct dcesrv_call_state *call);
NTSTATUS dcesrv_auth_alter_ack(struct dcesrv_call_state *call, struct ncacn_packet *pkt);
bool dcesrv_auth_request(struct dcesrv_call_state *call, DATA_BLOB *full_packet);
bool dcesrv_auth_response(struct dcesrv_call_state *call,
			  DATA_BLOB *blob, size_t sig_size,
			  struct ncacn_packet *pkt);

/* The following definitions come from ../source4/rpc_server/common/loadparm.c  */

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __DEFAULT_SOURCE4_RPC_SERVER_COMMON_PROTO_H__ */

